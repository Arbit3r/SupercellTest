package task;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class State {

	private HashMap<String, User> players = new HashMap<String, User>();

	public void Get() {

		Path path = Paths.get("src/main/resources/ex1/input3.txt");
		JsonObject json = null;
		JsonParser parser = new JsonParser();
		BufferedReader reader = null;
		String line = "";
		try {
			reader = Files.newBufferedReader(path);
			while (reader.ready()) {
				line = reader.readLine();
				json = parser.parse(line).getAsJsonObject();
				System.out.println(json.get("type").getAsString());
				System.out.println(json.toString());
				String type = json.get("type").getAsString();
				
				String user1;
				String user2;

				switch (type) {
				case "make_friends":
					
					user1 = json.get("user1").getAsString();
					user2 = json.get("user2").getAsString();
					
					if(!players.containsKey(user1)) {
						players.put(user1, new User(user1));
					}
					
					if(!players.containsKey(user2)) {
						players.put(user2, new User(user2));
					}
					
					players.get(user1).addFriend(user2, players.get(user2));
					players.get(user2).addFriend(user1, players.get(user1));
					System.out.println(players.get(user1).getFriends().size());
					break;
				case "del_friends":
					
					user1 = json.get("user1").getAsString();
					user2 = json.get("user2").getAsString();
					
					if(players.containsKey(user1) && players.containsKey(user2)) {
						players.get(user1).removeFriend(user2);
						players.get(user2).removeFriend(user1);
					}
					System.out.println(players.get(user1).getFriends().size());
					break;
				case "update":
					user1 = json.get("user").getAsString();
					int time = json.get("timestamp").getAsInt();
					String values = json.get("values").getAsString();
					if(players.get(user1) != null) {
						players.get(user1).setTimestamp(time);
						for(int i = 0; i < values.size();i++) {
							
						}
					}
				}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
